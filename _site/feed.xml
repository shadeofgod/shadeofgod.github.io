<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ShadeofGod</title>
    <description>bing's blogsite about coding ...</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 21 Oct 2016 18:36:38 +0800</pubDate>
    <lastBuildDate>Fri, 21 Oct 2016 18:36:38 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>Javascript中操作数组的一些常用方法总结</title>
        <description>&lt;hr /&gt; &lt;h3 id=&quot;section&quot;&gt;从头部或尾部添加或删除元素&lt;/h3&gt; &lt;hr /&gt; &lt;ul&gt; &lt;li&gt; &lt;h4 id=&quot;pop&quot;&gt;pop()&lt;/h4&gt; &lt;p&gt;删除一个数组中的最后的一个元素，并且返回这个元素。&lt;/p&gt; &lt;p&gt;pop()方法删除掉数组中的最后一个元素，并且把这个元素返回。&lt;/p&gt; &lt;p&gt;注意原数组此时已经被改动，返回的元素保持着原有的类型，并不会存放在一个数组中，不要和后面的方法混淆了。&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// a = [1, 2, 3, 4];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// b = 5; typeof b = number;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;h4 id=&quot;push&quot;&gt;push()&lt;/h4&gt; &lt;p&gt;push()方法可以添加一个或多个元素到数组的尾部，并返回新的数组的长度。&lt;/p&gt; &lt;p&gt;需要添加的元素直接作为参数，用逗号隔开。&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span...</description>
        <pubDate>Wed, 19 Oct 2016 07:28:11 +0800</pubDate>
        <link>http://localhost:4000/Array-methods/</link>
        <guid isPermaLink="true">http://localhost:4000/Array-methods/</guid>
        
        <category>Array</category>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>Closure for dummies(translated)</title>
        <description>&lt;p&gt;originally posted on &lt;a href=&quot;http://stackoverflow.com/questions/111102/how-do-javascript-closures-work&quot;&gt;stackoverflow&lt;/a&gt; by Morris.&lt;/p&gt; &lt;p&gt;这是一篇在stackoverflow上关于Javascript闭包的解释，因为大部分中文或者英文官方资料都写的都非常晦涩难懂，在这里尽量用中文化的习惯翻译并解释，不同于英文的部分加入的是自己的理解，欢迎对错误的地方进行指正！希望本文让自己能有更深刻的理解，也可以帮到初学者。以下并附上英文部分的原文。&lt;/p&gt; &lt;p&gt;This page explains closures so that a programmer can understand them — using working JavaScript code. It is not for gurus or functional programmers.&lt;/p&gt; &lt;p&gt;以下通过Javascript代码为大家简单解释一下闭包的概念，大牛可以选择跳过。&lt;/p&gt; &lt;p&gt;Closures are &lt;em&gt;not hard&lt;/em&gt; to understand once the core concept is grokked. However, they are impossible to understand by reading any academic papers or academically oriented information about them!&lt;/p&gt; &lt;p&gt;只要核心的概念理解了以后，闭包其实就很好懂了，但是在学术性质比较浓的专业文档中读起来却会感觉非常难以理解。&lt;/p&gt; &lt;p&gt;This article is intended for programmers with some programming experience in a mainstream language, and who can read the following JavaScript function:&lt;/p&gt; &lt;p&gt;此文主要是为一些有基础编程经验的，了解一门主流编程语言，并且可以看懂以下简单Javascript代码的程序员所写的：&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;...</description>
        <pubDate>Sun, 16 Oct 2016 06:22:31 +0800</pubDate>
        <link>http://localhost:4000/Closure/</link>
        <guid isPermaLink="true">http://localhost:4000/Closure/</guid>
        
        <category>Closure</category>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>人生はマラソンです</title>
        <description>&lt;p&gt;&lt;img src=&quot;http://res.cloudinary.com/dxmlgmzb7/image/upload/v1476529844/blog/1.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;人生はマラソンです&lt;/h2&gt;

&lt;p&gt;きょうも走りつづける。
今天也继续跑着。&lt;/p&gt;

&lt;p&gt;だれだってランナーだ。
每个人都是跑者。&lt;/p&gt;

&lt;p&gt;时计は止められない。
时钟无法暂停。&lt;/p&gt;

&lt;p&gt;时间は一方向にしか流れない。
时间往前不停流逝。&lt;/p&gt;

&lt;p&gt;後戻りできないマラソンコースだ。
这是一场不能回头的马拉松大赛。&lt;/p&gt;

&lt;p&gt;ライバルと竞い合いながら、
边跟对手竞争着。&lt;/p&gt;

&lt;p&gt;时の流れという一本道を、ぼくらは走りつづける。
边在时间洪流这条直路上跑着。&lt;/p&gt;

&lt;p&gt;より速く。一歩でも前に。
比别人跑得更快。哪怕只快一步。&lt;/p&gt;

&lt;p&gt;その先に未来があると信じて。
相信前方有美好未来。&lt;/p&gt;

&lt;p&gt;かならずゴールはあると信じて。
相信一定有终点。&lt;/p&gt;

&lt;p&gt;人生は、マラソンだ。
人生是一场马拉松。&lt;/p&gt;

&lt;p&gt;でも、本当にそうか？
但真是如此吗？&lt;/p&gt;

&lt;p&gt;人生って、そういうものか？
人生就是这么一回事吗？&lt;/p&gt;

&lt;p&gt;ちがう！人生はマラソンじゃない。
不对！人生不是一场马拉松。&lt;/p&gt;

&lt;p&gt;谁が决めたコースなんだよ？谁が决めたゴールなんだよ？
谁定的路线？谁定的终点？&lt;/p&gt;

&lt;p&gt;どこを走ったっていい。どこへむかったっていい。
该跑去哪才好。该往哪跑才对。&lt;/p&gt;

&lt;p&gt;自分だけの道があるんだ。
（每个人都）有属于自己的路。&lt;/p&gt;

&lt;p&gt;自分だけの道？そんなもんあるのか？わからない。
自己的路？真的有吗？我不知道。&lt;/p&gt;

&lt;p&gt;仆らが、まだ出会っていない世界は、とてつもなく広い。
我们还没看过的世界，大到无法想象。&lt;/p&gt;

&lt;p&gt;そうだ、踏み出すんだ。
没错！偏离正轨吧！&lt;/p&gt;

&lt;p&gt;悩んで、悩んで、最後まで走り抜くんだ。
烦恼着、苦恼着，就这样一直跑到最后吧！&lt;/p&gt;

&lt;p&gt;失败してもいい。寄り道してもいい。谁かと比べなくていい。
失败又怎样？绕点路又怎样？也不用跟其他人比。&lt;/p&gt;

&lt;p&gt;道は1つじゃない。ゴールは1つじゃない。
路不只一条，终点不只一个。&lt;/p&gt;

&lt;p&gt;それは人间の数だけあるんだ！
有多少人就有多少种可能。&lt;/p&gt;

&lt;p&gt;すべての人生が、すばらしい。
人生，各自精彩。&lt;/p&gt;

&lt;p&gt;谁だ、人生をマラソンって言ったのは。
谁说人生是一场马拉松的？&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Oct 2016 03:06:31 +0800</pubDate>
        <link>http://localhost:4000/%E4%BA%BA%E7%94%9F%E3%81%AF%E3%83%9E%E3%83%A9%E3%82%BD%E3%83%B3%E3%81%A7%E3%81%99/</link>
        <guid isPermaLink="true">http://localhost:4000/%E4%BA%BA%E7%94%9F%E3%81%AF%E3%83%9E%E3%83%A9%E3%82%BD%E3%83%B3%E3%81%A7%E3%81%99/</guid>
        
        <category>心灵鸡汤</category>
        
        
        <category>鸡汤</category>
        
      </item>
    
      <item>
        <title>Github is awesome</title>
        <description>&lt;p class=&quot;music-read&quot;&gt;&lt;a href=&quot;spotify:track:4DAZ8UYNpWVIV46aLkN2Qp&quot;&gt;Music for reading(spotify)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=&quot;http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2016/02/raw.gif&quot; /&gt;&lt;/p&gt; &lt;h2 id=&quot;github--why-&quot;&gt;Github ? why ?&lt;/h2&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Iste quas, esse laudantium quis ipsa consequuntur iure atque! Necessitatibus quam quidem illum, corrupti molestiae, maxime neque, consequuntur quia alias, modi commodi.Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate rem ducimus dolores repellat itaque perferendis corporis ex dicta doloremque optio harum excepturi, ut, praesentium asperiores! Voluptatum amet perspiciatis iusto, fugiat!Lorem ipsum dolor sit amet, consectetur adipisicing elit. Harum, libero quia placeat necessitatibus culpa mollitia, illum, quam sed ratione ad eaque suscipit consectetur itaque quasi aperiam. Quaerat, nihil voluptas...</description>
        <pubDate>Sat, 12 Mar 2016 08:06:31 +0800</pubDate>
        <link>http://localhost:4000/space/</link>
        <guid isPermaLink="true">http://localhost:4000/space/</guid>
        
        <category>Githubisawesome</category>
        
        
        <category>Github is awesome</category>
        
      </item>
    
  </channel>
</rss>
